Statement block - Gen<None> - 49 - (0:0,0)
    MetaCode span - Gen<None> - [{] - SpanEditHandler;Accepts:None - (0:0,0) - Symbols:1
        CSharpSymbolType.LeftBrace;[{];
    Code span - Gen<Stmt> - [ if (true) { var val = @x; if (val != 3) { } } ] - AutoCompleteEditHandler;Accepts:Any,AutoComplete:[<null>];AtEOL - (1:0,1) - Symbols:35
        CSharpSymbolType.WhiteSpace;[ ];
        CSharpSymbolType.Keyword;[if];
        CSharpSymbolType.WhiteSpace;[ ];
        CSharpSymbolType.LeftParenthesis;[(];
        CSharpSymbolType.Keyword;[true];
        CSharpSymbolType.RightParenthesis;[)];
        CSharpSymbolType.WhiteSpace;[ ];
        CSharpSymbolType.LeftBrace;[{];
        CSharpSymbolType.WhiteSpace;[ ];
        CSharpSymbolType.Identifier;[var];
        CSharpSymbolType.WhiteSpace;[ ];
        CSharpSymbolType.Identifier;[val];
        CSharpSymbolType.WhiteSpace;[ ];
        CSharpSymbolType.Assign;[=];
        CSharpSymbolType.WhiteSpace;[ ];
        CSharpSymbolType.Transition;[@];
        CSharpSymbolType.Identifier;[x];
        CSharpSymbolType.Semicolon;[;];
        CSharpSymbolType.WhiteSpace;[ ];
        CSharpSymbolType.Keyword;[if];
        CSharpSymbolType.WhiteSpace;[ ];
        CSharpSymbolType.LeftParenthesis;[(];
        CSharpSymbolType.Identifier;[val];
        CSharpSymbolType.WhiteSpace;[ ];
        CSharpSymbolType.NotEqual;[!=];
        CSharpSymbolType.WhiteSpace;[ ];
        CSharpSymbolType.IntegerLiteral;[3];
        CSharpSymbolType.RightParenthesis;[)];
        CSharpSymbolType.WhiteSpace;[ ];
        CSharpSymbolType.LeftBrace;[{];
        CSharpSymbolType.WhiteSpace;[ ];
        CSharpSymbolType.RightBrace;[}];
        CSharpSymbolType.WhiteSpace;[ ];
        CSharpSymbolType.RightBrace;[}];
        CSharpSymbolType.WhiteSpace;[ ];
    MetaCode span - Gen<None> - [}] - SpanEditHandler;Accepts:None - (48:0,48) - Symbols:1
        CSharpSymbolType.RightBrace;[}];
