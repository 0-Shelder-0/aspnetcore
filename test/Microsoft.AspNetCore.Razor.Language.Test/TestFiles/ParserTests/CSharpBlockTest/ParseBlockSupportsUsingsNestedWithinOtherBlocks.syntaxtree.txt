Statement block - Gen<None> - 96 - (0:0,0)
    Code span - Gen<Stmt> - [if(foo) { using(int i = 0; i < 10; new Foo { Bar = "baz" }) { Debug.WriteLine(@"foo } bar"); } }] - SpanEditHandler;Accepts:Any - (0:0,0) - Symbols:53
        CSharpSymbolType.Keyword;[if];
        CSharpSymbolType.LeftParenthesis;[(];
        CSharpSymbolType.Identifier;[foo];
        CSharpSymbolType.RightParenthesis;[)];
        CSharpSymbolType.WhiteSpace;[ ];
        CSharpSymbolType.LeftBrace;[{];
        CSharpSymbolType.WhiteSpace;[ ];
        CSharpSymbolType.Keyword;[using];
        CSharpSymbolType.LeftParenthesis;[(];
        CSharpSymbolType.Keyword;[int];
        CSharpSymbolType.WhiteSpace;[ ];
        CSharpSymbolType.Identifier;[i];
        CSharpSymbolType.WhiteSpace;[ ];
        CSharpSymbolType.Assign;[=];
        CSharpSymbolType.WhiteSpace;[ ];
        CSharpSymbolType.IntegerLiteral;[0];
        CSharpSymbolType.Semicolon;[;];
        CSharpSymbolType.WhiteSpace;[ ];
        CSharpSymbolType.Identifier;[i];
        CSharpSymbolType.WhiteSpace;[ ];
        CSharpSymbolType.LessThan;[<];
        CSharpSymbolType.WhiteSpace;[ ];
        CSharpSymbolType.IntegerLiteral;[10];
        CSharpSymbolType.Semicolon;[;];
        CSharpSymbolType.WhiteSpace;[ ];
        CSharpSymbolType.Keyword;[new];
        CSharpSymbolType.WhiteSpace;[ ];
        CSharpSymbolType.Identifier;[Foo];
        CSharpSymbolType.WhiteSpace;[ ];
        CSharpSymbolType.LeftBrace;[{];
        CSharpSymbolType.WhiteSpace;[ ];
        CSharpSymbolType.Identifier;[Bar];
        CSharpSymbolType.WhiteSpace;[ ];
        CSharpSymbolType.Assign;[=];
        CSharpSymbolType.WhiteSpace;[ ];
        CSharpSymbolType.StringLiteral;["baz"];
        CSharpSymbolType.WhiteSpace;[ ];
        CSharpSymbolType.RightBrace;[}];
        CSharpSymbolType.RightParenthesis;[)];
        CSharpSymbolType.WhiteSpace;[ ];
        CSharpSymbolType.LeftBrace;[{];
        CSharpSymbolType.WhiteSpace;[ ];
        CSharpSymbolType.Identifier;[Debug];
        CSharpSymbolType.Dot;[.];
        CSharpSymbolType.Identifier;[WriteLine];
        CSharpSymbolType.LeftParenthesis;[(];
        CSharpSymbolType.StringLiteral;[@"foo } bar"];
        CSharpSymbolType.RightParenthesis;[)];
        CSharpSymbolType.Semicolon;[;];
        CSharpSymbolType.WhiteSpace;[ ];
        CSharpSymbolType.RightBrace;[}];
        CSharpSymbolType.WhiteSpace;[ ];
        CSharpSymbolType.RightBrace;[}];
