Statement block - Gen<None> - 58 - (0:0,0)
    Transition span - Gen<None> - [@] - SpanEditHandler;Accepts:None - (0:0,0) - Symbols:1
        CSharpSymbolType.Transition;[@];
    Code span - Gen<Stmt> - [do { var foo = bar;] - SpanEditHandler;Accepts:Any - (1:0,1) - Symbols:12
        CSharpSymbolType.Keyword;[do];
        CSharpSymbolType.WhiteSpace;[ ];
        CSharpSymbolType.LeftBrace;[{];
        CSharpSymbolType.WhiteSpace;[ ];
        CSharpSymbolType.Identifier;[var];
        CSharpSymbolType.WhiteSpace;[ ];
        CSharpSymbolType.Identifier;[foo];
        CSharpSymbolType.WhiteSpace;[ ];
        CSharpSymbolType.Assign;[=];
        CSharpSymbolType.WhiteSpace;[ ];
        CSharpSymbolType.Identifier;[bar];
        CSharpSymbolType.Semicolon;[;];
    Markup block - Gen<None> - 12 - (20:0,20)
        Markup span - Gen<Markup> - [ ] - SpanEditHandler;Accepts:Any - (20:0,20) - Symbols:1
            HtmlSymbolType.WhiteSpace;[ ];
        Tag block - Gen<None> - 3 - (21:0,21)
            Markup span - Gen<Markup> - [<p>] - SpanEditHandler;Accepts:None - (21:0,21) - Symbols:3
                HtmlSymbolType.OpenAngle;[<];
                HtmlSymbolType.Text;[p];
                HtmlSymbolType.CloseAngle;[>];
        Markup span - Gen<Markup> - [Foo] - SpanEditHandler;Accepts:Any - (24:0,24) - Symbols:1
            HtmlSymbolType.Text;[Foo];
        Tag block - Gen<None> - 4 - (27:0,27)
            Markup span - Gen<Markup> - [</p>] - SpanEditHandler;Accepts:None - (27:0,27) - Symbols:4
                HtmlSymbolType.OpenAngle;[<];
                HtmlSymbolType.ForwardSlash;[/];
                HtmlSymbolType.Text;[p];
                HtmlSymbolType.CloseAngle;[>];
        Markup span - Gen<Markup> - [ ] - SpanEditHandler;Accepts:None - (31:0,31) - Symbols:1
            HtmlSymbolType.WhiteSpace;[ ];
    Code span - Gen<Stmt> - [foo++; } while (foo<bar>);] - SpanEditHandler;Accepts:None - (32:0,32) - Symbols:15
        CSharpSymbolType.Identifier;[foo];
        CSharpSymbolType.Increment;[++];
        CSharpSymbolType.Semicolon;[;];
        CSharpSymbolType.WhiteSpace;[ ];
        CSharpSymbolType.RightBrace;[}];
        CSharpSymbolType.WhiteSpace;[ ];
        CSharpSymbolType.Keyword;[while];
        CSharpSymbolType.WhiteSpace;[ ];
        CSharpSymbolType.LeftParenthesis;[(];
        CSharpSymbolType.Identifier;[foo];
        CSharpSymbolType.LessThan;[<];
        CSharpSymbolType.Identifier;[bar];
        CSharpSymbolType.GreaterThan;[>];
        CSharpSymbolType.RightParenthesis;[)];
        CSharpSymbolType.Semicolon;[;];
