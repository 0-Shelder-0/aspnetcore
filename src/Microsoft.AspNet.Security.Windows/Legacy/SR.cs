// Copyright (c) Microsoft Open Technologies, Inc.
// All Rights Reserved
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// THIS CODE IS PROVIDED *AS IS* BASIS, WITHOUT WARRANTIES OR
// CONDITIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING
// WITHOUT LIMITATION ANY IMPLIED WARRANTIES OR CONDITIONS OF
// TITLE, FITNESS FOR A PARTICULAR PURPOSE, MERCHANTABLITY OR
// NON-INFRINGEMENT.
// See the Apache 2 License for the specific language governing
// permissions and limitations under the License.

// -----------------------------------------------------------------------
// <copyright file="SR.cs" company="Microsoft">
//      Copyright (c) Microsoft Corporation.  All rights reserved.
// </copyright>
// -----------------------------------------------------------------------

namespace System
{
    using System;
    using System.Reflection;
    using System.Globalization;
    using System.Resources;
    using System.Text;
    using System.Threading;
    using System.Security.Permissions;
    using System.ComponentModel;

    /// <summary>
    ///     AutoGenerated resource class. Usage:
    ///         string s = SR.GetString(SR.MyIdenfitier);
    ///  </summary>
    internal sealed class SR
    {
        internal const string security_ExtendedProtection_NoOSSupport = "security_ExtendedProtection_NoOSSupport";         
        internal const string net_nonClsCompliantException = "net_nonClsCompliantException";
        internal const string net_illegalConfigWith = "net_illegalConfigWith";
        internal const string net_illegalConfigWithout = "net_illegalConfigWithout";
        internal const string net_baddate = "net_baddate";
        internal const string net_writestarted = "net_writestarted";
        internal const string net_clsmall = "net_clsmall";
        internal const string net_reqsubmitted = "net_reqsubmitted";
        internal const string net_rspsubmitted = "net_rspsubmitted";
        internal const string net_ftp_no_http_cmd = "net_ftp_no_http_cmd";
        internal const string net_ftp_invalid_method_name = "net_ftp_invalid_method_name";
        internal const string net_ftp_invalid_renameto = "net_ftp_invalid_renameto";
        internal const string net_ftp_no_defaultcreds = "net_ftp_no_defaultcreds";
        internal const string net_ftpnoresponse = "net_ftpnoresponse";
        internal const string net_ftp_response_invalid_format = "net_ftp_response_invalid_format";
        internal const string net_ftp_no_offsetforhttp = "net_ftp_no_offsetforhttp";
        internal const string net_ftp_invalid_uri = "net_ftp_invalid_uri";
        internal const string net_ftp_invalid_status_response = "net_ftp_invalid_status_response";
        internal const string net_ftp_server_failed_passive = "net_ftp_server_failed_passive";
        internal const string net_ftp_active_address_different = "net_ftp_active_address_different";
        internal const string net_ftp_proxy_does_not_support_ssl = "net_ftp_proxy_does_not_support_ssl";
        internal const string net_ftp_invalid_response_filename = "net_ftp_invalid_response_filename";
        internal const string net_ftp_unsupported_method = "net_ftp_unsupported_method";
        internal const string net_resubmitcanceled = "net_resubmitcanceled";
        internal const string net_redirect_perm = "net_redirect_perm";
        internal const string net_resubmitprotofailed = "net_resubmitprotofailed";
        internal const string net_needchunked = "net_needchunked";
        internal const string net_nochunked = "net_nochunked";
        internal const string net_nochunkuploadonhttp10 = "net_nochunkuploadonhttp10";
        internal const string net_connarg = "net_connarg";
        internal const string net_no100 = "net_no100";
        internal const string net_fromto = "net_fromto";
        internal const string net_rangetoosmall = "net_rangetoosmall";
        internal const string net_entitytoobig = "net_entitytoobig";
        internal const string net_invalidversion = "net_invalidversion";
        internal const string net_invalidstatus = "net_invalidstatus";
        internal const string net_toosmall = "net_toosmall";
        internal const string net_toolong = "net_toolong";
        internal const string net_connclosed = "net_connclosed";
        internal const string net_noseek = "net_noseek";
        internal const string net_servererror = "net_servererror";
        internal const string net_nouploadonget = "net_nouploadonget";
        internal const string net_mutualauthfailed = "net_mutualauthfailed";
        internal const string net_invasync = "net_invasync";
        internal const string net_inasync = "net_inasync";
        internal const string net_mustbeuri = "net_mustbeuri";
        internal const string net_format_shexp = "net_format_shexp";
        internal const string net_cannot_load_proxy_helper = "net_cannot_load_proxy_helper";
        internal const string net_invalid_host = "net_invalid_host";
        internal const string net_repcall = "net_repcall";
        internal const string net_wrongversion = "net_wrongversion";
        internal const string net_badmethod = "net_badmethod";
        internal const string net_io_notenoughbyteswritten = "net_io_notenoughbyteswritten";
        internal const string net_io_timeout_use_ge_zero = "net_io_timeout_use_ge_zero";
        internal const string net_io_timeout_use_gt_zero = "net_io_timeout_use_gt_zero";
        internal const string net_io_no_0timeouts = "net_io_no_0timeouts";
        internal const string net_requestaborted = "net_requestaborted";
        internal const string net_tooManyRedirections = "net_tooManyRedirections";
        internal const string net_authmodulenotregistered = "net_authmodulenotregistered";
        internal const string net_authschemenotregistered = "net_authschemenotregistered";
        internal const string net_proxyschemenotsupported = "net_proxyschemenotsupported";
        internal const string net_maxsrvpoints = "net_maxsrvpoints";
        internal const string net_unknown_prefix = "net_unknown_prefix";
        internal const string net_notconnected = "net_notconnected";
        internal const string net_notstream = "net_notstream";
        internal const string net_timeout = "net_timeout";
        internal const string net_nocontentlengthonget = "net_nocontentlengthonget";
        internal const string net_contentlengthmissing = "net_contentlengthmissing";
        internal const string net_nonhttpproxynotallowed = "net_nonhttpproxynotallowed";
        internal const string net_nottoken = "net_nottoken";
        internal const string net_rangetype = "net_rangetype";
        internal const string net_need_writebuffering = "net_need_writebuffering";
        internal const string net_securitypackagesupport = "net_securitypackagesupport";
        internal const string net_securityprotocolnotsupported = "net_securityprotocolnotsupported";
        internal const string net_nodefaultcreds = "net_nodefaultcreds";
        internal const string net_stopped = "net_stopped";
        internal const string net_udpconnected = "net_udpconnected";
        internal const string net_readonlystream = "net_readonlystream";
        internal const string net_writeonlystream = "net_writeonlystream";
        internal const string net_no_concurrent_io_allowed = "net_no_concurrent_io_allowed";
        internal const string net_needmorethreads = "net_needmorethreads";
        internal const string net_MethodNotImplementedException = "net_MethodNotImplementedException";
        internal const string net_PropertyNotImplementedException = "net_PropertyNotImplementedException";
        internal const string net_MethodNotSupportedException = "net_MethodNotSupportedException";
        internal const string net_PropertyNotSupportedException = "net_PropertyNotSupportedException";
        internal const string net_ProtocolNotSupportedException = "net_ProtocolNotSupportedException";
        internal const string net_SelectModeNotSupportedException = "net_SelectModeNotSupportedException";
        internal const string net_InvalidSocketHandle = "net_InvalidSocketHandle";
        internal const string net_InvalidAddressFamily = "net_InvalidAddressFamily";
        internal const string net_InvalidEndPointAddressFamily = "net_InvalidEndPointAddressFamily";
        internal const string net_InvalidSocketAddressSize = "net_InvalidSocketAddressSize";
        internal const string net_invalidAddressList = "net_invalidAddressList";
        internal const string net_invalidPingBufferSize = "net_invalidPingBufferSize";
        internal const string net_cant_perform_during_shutdown = "net_cant_perform_during_shutdown";
        internal const string net_cant_create_environment = "net_cant_create_environment";
        internal const string net_completed_result = "net_completed_result";
        internal const string net_protocol_invalid_family = "net_protocol_invalid_family";
        internal const string net_protocol_invalid_multicast_family = "net_protocol_invalid_multicast_family";
        internal const string net_empty_osinstalltype = "net_empty_osinstalltype";
        internal const string net_unknown_osinstalltype = "net_unknown_osinstalltype";
        internal const string net_cant_determine_osinstalltype = "net_cant_determine_osinstalltype";
        internal const string net_osinstalltype = "net_osinstalltype";
        internal const string net_entire_body_not_written = "net_entire_body_not_written";
        internal const string net_must_provide_request_body = "net_must_provide_request_body";
        internal const string net_ssp_dont_support_cbt = "net_ssp_dont_support_cbt";
        internal const string net_sockets_zerolist = "net_sockets_zerolist";
        internal const string net_sockets_blocking = "net_sockets_blocking";
        internal const string net_sockets_useblocking = "net_sockets_useblocking";
        internal const string net_sockets_select = "net_sockets_select";
        internal const string net_sockets_toolarge_select = "net_sockets_toolarge_select";
        internal const string net_sockets_empty_select = "net_sockets_empty_select";
        internal const string net_sockets_mustbind = "net_sockets_mustbind";
        internal const string net_sockets_mustlisten = "net_sockets_mustlisten";
        internal const string net_sockets_mustnotlisten = "net_sockets_mustnotlisten";
        internal const string net_sockets_mustnotbebound = "net_sockets_mustnotbebound";
        internal const string net_sockets_namedmustnotbebound = "net_sockets_namedmustnotbebound";
        internal const string net_sockets_invalid_socketinformation = "net_sockets_invalid_socketinformation";
        internal const string net_sockets_invalid_ipaddress_length = "net_sockets_invalid_ipaddress_length";
        internal const string net_sockets_invalid_optionValue = "net_sockets_invalid_optionValue";
        internal const string net_sockets_invalid_optionValue_all = "net_sockets_invalid_optionValue_all";
        internal const string net_sockets_invalid_dnsendpoint = "net_sockets_invalid_dnsendpoint";
        internal const string net_sockets_disconnectedConnect = "net_sockets_disconnectedConnect";
        internal const string net_sockets_disconnectedAccept = "net_sockets_disconnectedAccept";
        internal const string net_tcplistener_mustbestopped = "net_tcplistener_mustbestopped";
        internal const string net_sockets_no_duplicate_async = "net_sockets_no_duplicate_async";
        internal const string net_socketopinprogress = "net_socketopinprogress";
        internal const string net_buffercounttoosmall = "net_buffercounttoosmall";
        internal const string net_multibuffernotsupported = "net_multibuffernotsupported";
        internal const string net_ambiguousbuffers = "net_ambiguousbuffers";
        internal const string net_sockets_ipv6only = "net_sockets_ipv6only";
        internal const string net_perfcounter_initialized_success = "net_perfcounter_initialized_success";
        internal const string net_perfcounter_initialized_error = "net_perfcounter_initialized_error";
        internal const string net_perfcounter_nocategory = "net_perfcounter_nocategory";
        internal const string net_perfcounter_initialization_started = "net_perfcounter_initialization_started";
        internal const string net_perfcounter_cant_queue_workitem = "net_perfcounter_cant_queue_workitem";
        internal const string net_config_proxy = "net_config_proxy";
        internal const string net_config_proxy_module_not_public = "net_config_proxy_module_not_public";
        internal const string net_config_authenticationmodules = "net_config_authenticationmodules";
        internal const string net_config_webrequestmodules = "net_config_webrequestmodules";
        internal const string net_config_requestcaching = "net_config_requestcaching";
        internal const string net_config_section_permission = "net_config_section_permission";
        internal const string net_config_element_permission = "net_config_element_permission";
        internal const string net_config_property_permission = "net_config_property_permission";
        internal const string net_WebResponseParseError_InvalidHeaderName = "net_WebResponseParseError_InvalidHeaderName";
        internal const string net_WebResponseParseError_InvalidContentLength = "net_WebResponseParseError_InvalidContentLength";
        internal const string net_WebResponseParseError_IncompleteHeaderLine = "net_WebResponseParseError_IncompleteHeaderLine";
        internal const string net_WebResponseParseError_CrLfError = "net_WebResponseParseError_CrLfError";
        internal const string net_WebResponseParseError_InvalidChunkFormat = "net_WebResponseParseError_InvalidChunkFormat";
        internal const string net_WebResponseParseError_UnexpectedServerResponse = "net_WebResponseParseError_UnexpectedServerResponse";
        internal const string net_webstatus_Success = "net_webstatus_Success";
        internal const string net_webstatus_NameResolutionFailure = "net_webstatus_NameResolutionFailure";
        internal const string net_webstatus_ConnectFailure = "net_webstatus_ConnectFailure";
        internal const string net_webstatus_ReceiveFailure = "net_webstatus_ReceiveFailure";
        internal const string net_webstatus_SendFailure = "net_webstatus_SendFailure";
        internal const string net_webstatus_PipelineFailure = "net_webstatus_PipelineFailure";
        internal const string net_webstatus_RequestCanceled = "net_webstatus_RequestCanceled";
        internal const string net_webstatus_ConnectionClosed = "net_webstatus_ConnectionClosed";
        internal const string net_webstatus_TrustFailure = "net_webstatus_TrustFailure";
        internal const string net_webstatus_SecureChannelFailure = "net_webstatus_SecureChannelFailure";
        internal const string net_webstatus_ServerProtocolViolation = "net_webstatus_ServerProtocolViolation";
        internal const string net_webstatus_KeepAliveFailure = "net_webstatus_KeepAliveFailure";
        internal const string net_webstatus_ProxyNameResolutionFailure = "net_webstatus_ProxyNameResolutionFailure";
        internal const string net_webstatus_MessageLengthLimitExceeded = "net_webstatus_MessageLengthLimitExceeded";
        internal const string net_webstatus_CacheEntryNotFound = "net_webstatus_CacheEntryNotFound";
        internal const string net_webstatus_RequestProhibitedByCachePolicy = "net_webstatus_RequestProhibitedByCachePolicy";
        internal const string net_webstatus_Timeout = "net_webstatus_Timeout";
        internal const string net_webstatus_RequestProhibitedByProxy = "net_webstatus_RequestProhibitedByProxy";
        internal const string net_InvalidStatusCode = "net_InvalidStatusCode";
        internal const string net_ftpstatuscode_ServiceNotAvailable = "net_ftpstatuscode_ServiceNotAvailable";
        internal const string net_ftpstatuscode_CantOpenData = "net_ftpstatuscode_CantOpenData";
        internal const string net_ftpstatuscode_ConnectionClosed = "net_ftpstatuscode_ConnectionClosed";
        internal const string net_ftpstatuscode_ActionNotTakenFileUnavailableOrBusy = "net_ftpstatuscode_ActionNotTakenFileUnavailableOrBusy";
        internal const string net_ftpstatuscode_ActionAbortedLocalProcessingError = "net_ftpstatuscode_ActionAbortedLocalProcessingError";
        internal const string net_ftpstatuscode_ActionNotTakenInsufficentSpace = "net_ftpstatuscode_ActionNotTakenInsufficentSpace";
        internal const string net_ftpstatuscode_CommandSyntaxError = "net_ftpstatuscode_CommandSyntaxError";
        internal const string net_ftpstatuscode_ArgumentSyntaxError = "net_ftpstatuscode_ArgumentSyntaxError";
        internal const string net_ftpstatuscode_CommandNotImplemented = "net_ftpstatuscode_CommandNotImplemented";
        internal const string net_ftpstatuscode_BadCommandSequence = "net_ftpstatuscode_BadCommandSequence";
        internal const string net_ftpstatuscode_NotLoggedIn = "net_ftpstatuscode_NotLoggedIn";
        internal const string net_ftpstatuscode_AccountNeeded = "net_ftpstatuscode_AccountNeeded";
        internal const string net_ftpstatuscode_ActionNotTakenFileUnavailable = "net_ftpstatuscode_ActionNotTakenFileUnavailable";
        internal const string net_ftpstatuscode_ActionAbortedUnknownPageType = "net_ftpstatuscode_ActionAbortedUnknownPageType";
        internal const string net_ftpstatuscode_FileActionAborted = "net_ftpstatuscode_FileActionAborted";
        internal const string net_ftpstatuscode_ActionNotTakenFilenameNotAllowed = "net_ftpstatuscode_ActionNotTakenFilenameNotAllowed";
        internal const string net_httpstatuscode_NoContent = "net_httpstatuscode_NoContent";
        internal const string net_httpstatuscode_NonAuthoritativeInformation = "net_httpstatuscode_NonAuthoritativeInformation";
        internal const string net_httpstatuscode_ResetContent = "net_httpstatuscode_ResetContent";
        internal const string net_httpstatuscode_PartialContent = "net_httpstatuscode_PartialContent";
        internal const string net_httpstatuscode_MultipleChoices = "net_httpstatuscode_MultipleChoices";
        internal const string net_httpstatuscode_Ambiguous = "net_httpstatuscode_Ambiguous";
        internal const string net_httpstatuscode_MovedPermanently = "net_httpstatuscode_MovedPermanently";
        internal const string net_httpstatuscode_Moved = "net_httpstatuscode_Moved";
        internal const string net_httpstatuscode_Found = "net_httpstatuscode_Found";
        internal const string net_httpstatuscode_Redirect = "net_httpstatuscode_Redirect";
        internal const string net_httpstatuscode_SeeOther = "net_httpstatuscode_SeeOther";
        internal const string net_httpstatuscode_RedirectMethod = "net_httpstatuscode_RedirectMethod";
        internal const string net_httpstatuscode_NotModified = "net_httpstatuscode_NotModified";
        internal const string net_httpstatuscode_UseProxy = "net_httpstatuscode_UseProxy";
        internal const string net_httpstatuscode_TemporaryRedirect = "net_httpstatuscode_TemporaryRedirect";
        internal const string net_httpstatuscode_RedirectKeepVerb = "net_httpstatuscode_RedirectKeepVerb";
        internal const string net_httpstatuscode_BadRequest = "net_httpstatuscode_BadRequest";
        internal const string net_httpstatuscode_Unauthorized = "net_httpstatuscode_Unauthorized";
        internal const string net_httpstatuscode_PaymentRequired = "net_httpstatuscode_PaymentRequired";
        internal const string net_httpstatuscode_Forbidden = "net_httpstatuscode_Forbidden";
        internal const string net_httpstatuscode_NotFound = "net_httpstatuscode_NotFound";
        internal const string net_httpstatuscode_MethodNotAllowed = "net_httpstatuscode_MethodNotAllowed";
        internal const string net_httpstatuscode_NotAcceptable = "net_httpstatuscode_NotAcceptable";
        internal const string net_httpstatuscode_ProxyAuthenticationRequired = "net_httpstatuscode_ProxyAuthenticationRequired";
        internal const string net_httpstatuscode_RequestTimeout = "net_httpstatuscode_RequestTimeout";
        internal const string net_httpstatuscode_Conflict = "net_httpstatuscode_Conflict";
        internal const string net_httpstatuscode_Gone = "net_httpstatuscode_Gone";
        internal const string net_httpstatuscode_LengthRequired = "net_httpstatuscode_LengthRequired";
        internal const string net_httpstatuscode_InternalServerError = "net_httpstatuscode_InternalServerError";
        internal const string net_httpstatuscode_NotImplemented = "net_httpstatuscode_NotImplemented";
        internal const string net_httpstatuscode_BadGateway = "net_httpstatuscode_BadGateway";
        internal const string net_httpstatuscode_ServiceUnavailable = "net_httpstatuscode_ServiceUnavailable";
        internal const string net_httpstatuscode_GatewayTimeout = "net_httpstatuscode_GatewayTimeout";
        internal const string net_httpstatuscode_HttpVersionNotSupported = "net_httpstatuscode_HttpVersionNotSupported";
        internal const string net_uri_BadScheme = "net_uri_BadScheme";
        internal const string net_uri_BadFormat = "net_uri_BadFormat";
        internal const string net_uri_BadUserPassword = "net_uri_BadUserPassword";
        internal const string net_uri_BadHostName = "net_uri_BadHostName";
        internal const string net_uri_BadAuthority = "net_uri_BadAuthority";
        internal const string net_uri_BadAuthorityTerminator = "net_uri_BadAuthorityTerminator";
        internal const string net_uri_EmptyUri = "net_uri_EmptyUri";
        internal const string net_uri_BadString = "net_uri_BadString";
        internal const string net_uri_MustRootedPath = "net_uri_MustRootedPath";
        internal const string net_uri_BadPort = "net_uri_BadPort";
        internal const string net_uri_SizeLimit = "net_uri_SizeLimit";
        internal const string net_uri_SchemeLimit = "net_uri_SchemeLimit";
        internal const string net_uri_NotAbsolute = "net_uri_NotAbsolute";
        internal const string net_uri_PortOutOfRange = "net_uri_PortOutOfRange";
        internal const string net_uri_UserDrivenParsing = "net_uri_UserDrivenParsing";
        internal const string net_uri_AlreadyRegistered = "net_uri_AlreadyRegistered";
        internal const string net_uri_NeedFreshParser = "net_uri_NeedFreshParser";
        internal const string net_uri_CannotCreateRelative = "net_uri_CannotCreateRelative";
        internal const string net_uri_InvalidUriKind = "net_uri_InvalidUriKind";
        internal const string net_uri_BadUnicodeHostForIdn = "net_uri_BadUnicodeHostForIdn";
        internal const string net_uri_GenericAuthorityNotDnsSafe = "net_uri_GenericAuthorityNotDnsSafe";
        internal const string net_uri_NotJustSerialization = "net_uri_NotJustSerialization";
        internal const string net_emptystringset = "net_emptystringset";
        internal const string net_emptystringcall = "net_emptystringcall";
        internal const string net_headers_req = "net_headers_req";
        internal const string net_headers_rsp = "net_headers_rsp";
        internal const string net_headers_toolong = "net_headers_toolong";
        internal const string net_WebHeaderInvalidControlChars = "net_WebHeaderInvalidControlChars";
        internal const string net_WebHeaderInvalidCRLFChars = "net_WebHeaderInvalidCRLFChars";
        internal const string net_WebHeaderInvalidHeaderChars = "net_WebHeaderInvalidHeaderChars";
        internal const string net_WebHeaderInvalidNonAsciiChars = "net_WebHeaderInvalidNonAsciiChars";
        internal const string net_WebHeaderMissingColon = "net_WebHeaderMissingColon";
        internal const string net_headerrestrict = "net_headerrestrict";
        internal const string net_io_completionportwasbound = "net_io_completionportwasbound";
        internal const string net_io_writefailure = "net_io_writefailure";
        internal const string net_io_readfailure = "net_io_readfailure";
        internal const string net_io_connectionclosed = "net_io_connectionclosed";
        internal const string net_io_transportfailure = "net_io_transportfailure";
        internal const string net_io_internal_bind = "net_io_internal_bind";
        internal const string net_io_invalidasyncresult = "net_io_invalidasyncresult";
        internal const string net_io_invalidnestedcall = "net_io_invalidnestedcall";
        internal const string net_io_invalidendcall = "net_io_invalidendcall";
        internal const string net_io_must_be_rw_stream = "net_io_must_be_rw_stream";
        internal const string net_io_header_id = "net_io_header_id";
        internal const string net_io_out_range = "net_io_out_range";
        internal const string net_io_encrypt = "net_io_encrypt";
        internal const string net_io_decrypt = "net_io_decrypt";
        internal const string net_io_read = "net_io_read";
        internal const string net_io_write = "net_io_write";
        internal const string net_io_eof = "net_io_eof";
        internal const string net_io_async_result = "net_io_async_result";
        internal const string net_listener_mustcall = "net_listener_mustcall";
        internal const string net_listener_mustcompletecall = "net_listener_mustcompletecall";
        internal const string net_listener_callinprogress = "net_listener_callinprogress";
        internal const string net_listener_scheme = "net_listener_scheme";
        internal const string net_listener_host = "net_listener_host";
        internal const string net_listener_slash = "net_listener_slash";
        internal const string net_listener_repcall = "net_listener_repcall";
        internal const string net_listener_invalid_cbt_type = "net_listener_invalid_cbt_type";
        internal const string net_listener_no_spns = "net_listener_no_spns";
        internal const string net_listener_cannot_set_custom_cbt = "net_listener_cannot_set_custom_cbt";
        internal const string net_listener_cbt_not_supported = "net_listener_cbt_not_supported";
        internal const string net_listener_detach_error = "net_listener_detach_error";
        internal const string net_listener_close_urlgroup_error = "net_listener_close_urlgroup_error";
        internal const string net_tls_version = "net_tls_version";
        internal const string net_perm_target = "net_perm_target";
        internal const string net_perm_both_regex = "net_perm_both_regex";
        internal const string net_perm_none = "net_perm_none";
        internal const string net_perm_attrib_count = "net_perm_attrib_count";
        internal const string net_perm_invalid_val = "net_perm_invalid_val";
        internal const string net_perm_attrib_multi = "net_perm_attrib_multi";
        internal const string net_perm_epname = "net_perm_epname";
        internal const string net_perm_invalid_val_in_element = "net_perm_invalid_val_in_element";
        internal const string net_invalid_ip_addr = "net_invalid_ip_addr";
        internal const string dns_bad_ip_address = "dns_bad_ip_address";
        internal const string net_bad_mac_address = "net_bad_mac_address";
        internal const string net_ping = "net_ping";
        internal const string net_bad_ip_address_prefix = "net_bad_ip_address_prefix";
        internal const string net_max_ip_address_list_length_exceeded = "net_max_ip_address_list_length_exceeded";
        internal const string net_ipv4_not_installed = "net_ipv4_not_installed";
        internal const string net_ipv6_not_installed = "net_ipv6_not_installed";
        internal const string net_webclient = "net_webclient";
        internal const string net_webclient_ContentType = "net_webclient_ContentType";
        internal const string net_webclient_Multipart = "net_webclient_Multipart";
        internal const string net_webclient_no_concurrent_io_allowed = "net_webclient_no_concurrent_io_allowed";
        internal const string net_webclient_invalid_baseaddress = "net_webclient_invalid_baseaddress";
        internal const string net_container_add_cookie = "net_container_add_cookie";
        internal const string net_cookie_invalid = "net_cookie_invalid";
        internal const string net_cookie_size = "net_cookie_size";
        internal const string net_cookie_parse_header = "net_cookie_parse_header";
        internal const string net_cookie_attribute = "net_cookie_attribute";
        internal const string net_cookie_format = "net_cookie_format";
        internal const string net_cookie_exists = "net_cookie_exists";
        internal const string net_cookie_capacity_range = "net_cookie_capacity_range";
        internal const string net_set_token = "net_set_token";
        internal const string net_revert_token = "net_revert_token";
        internal const string net_ssl_io_async_context = "net_ssl_io_async_context";
        internal const string net_ssl_io_encrypt = "net_ssl_io_encrypt";
        internal const string net_ssl_io_decrypt = "net_ssl_io_decrypt";
        internal const string net_ssl_io_context_expired = "net_ssl_io_context_expired";
        internal const string net_ssl_io_handshake_start = "net_ssl_io_handshake_start";
        internal const string net_ssl_io_handshake = "net_ssl_io_handshake";
        internal const string net_ssl_io_frame = "net_ssl_io_frame";
        internal const string net_ssl_io_corrupted = "net_ssl_io_corrupted";
        internal const string net_ssl_io_cert_validation = "net_ssl_io_cert_validation";
        internal const string net_ssl_io_invalid_end_call = "net_ssl_io_invalid_end_call";
        internal const string net_ssl_io_invalid_begin_call = "net_ssl_io_invalid_begin_call";
        internal const string net_ssl_io_no_server_cert = "net_ssl_io_no_server_cert";
        internal const string net_auth_bad_client_creds = "net_auth_bad_client_creds";
        internal const string net_auth_bad_client_creds_or_target_mismatch = "net_auth_bad_client_creds_or_target_mismatch";
        internal const string net_auth_context_expectation = "net_auth_context_expectation";
        internal const string net_auth_context_expectation_remote = "net_auth_context_expectation_remote";
        internal const string net_auth_supported_impl_levels = "net_auth_supported_impl_levels";
        internal const string net_auth_no_anonymous_support = "net_auth_no_anonymous_support";
        internal const string net_auth_reauth = "net_auth_reauth";
        internal const string net_auth_noauth = "net_auth_noauth";
        internal const string net_auth_client_server = "net_auth_client_server";
        internal const string net_auth_noencryption = "net_auth_noencryption";
        internal const string net_auth_SSPI = "net_auth_SSPI";
        internal const string net_auth_failure = "net_auth_failure";
        internal const string net_auth_eof = "net_auth_eof";
        internal const string net_auth_alert = "net_auth_alert";
        internal const string net_auth_ignored_reauth = "net_auth_ignored_reauth";
        internal const string net_auth_empty_read = "net_auth_empty_read";
        internal const string net_auth_message_not_encrypted = "net_auth_message_not_encrypted";
        internal const string net_auth_must_specify_extended_protection_scheme = "net_auth_must_specify_extended_protection_scheme";
        internal const string net_frame_size = "net_frame_size";
        internal const string net_frame_read_io = "net_frame_read_io";
        internal const string net_frame_read_size = "net_frame_read_size";
        internal const string net_frame_max_size = "net_frame_max_size";
        internal const string net_jscript_load = "net_jscript_load";
        internal const string net_proxy_not_gmt = "net_proxy_not_gmt";
        internal const string net_proxy_invalid_dayofweek = "net_proxy_invalid_dayofweek";
        internal const string net_proxy_invalid_url_format = "net_proxy_invalid_url_format";
        internal const string net_param_not_string = "net_param_not_string";
        internal const string net_value_cannot_be_negative = "net_value_cannot_be_negative";
        internal const string net_invalid_offset = "net_invalid_offset";
        internal const string net_offset_plus_count = "net_offset_plus_count";
        internal const string net_cannot_be_false = "net_cannot_be_false";
        internal const string net_invalid_enum = "net_invalid_enum";
        internal const string net_listener_already = "net_listener_already";
        internal const string net_cache_shadowstream_not_writable = "net_cache_shadowstream_not_writable";
        internal const string net_cache_validator_fail = "net_cache_validator_fail";
        internal const string net_cache_access_denied = "net_cache_access_denied";
        internal const string net_cache_validator_result = "net_cache_validator_result";
        internal const string net_cache_retrieve_failure = "net_cache_retrieve_failure";
        internal const string net_cache_not_supported_body = "net_cache_not_supported_body";
        internal const string net_cache_not_supported_command = "net_cache_not_supported_command";
        internal const string net_cache_not_accept_response = "net_cache_not_accept_response";
        internal const string net_cache_method_failed = "net_cache_method_failed";
        internal const string net_cache_key_failed = "net_cache_key_failed";
        internal const string net_cache_no_stream = "net_cache_no_stream";
        internal const string net_cache_unsupported_partial_stream = "net_cache_unsupported_partial_stream";
        internal const string net_cache_not_configured = "net_cache_not_configured";
        internal const string net_cache_non_seekable_stream_not_supported = "net_cache_non_seekable_stream_not_supported";
        internal const string net_invalid_cast = "net_invalid_cast";
        internal const string net_collection_readonly = "net_collection_readonly";
        internal const string net_not_ipermission = "net_not_ipermission";
        internal const string net_no_classname = "net_no_classname";
        internal const string net_no_typename = "net_no_typename";
        internal const string net_array_too_small = "net_array_too_small";
        internal const string net_servicePointAddressNotSupportedInHostMode = "net_servicePointAddressNotSupportedInHostMode";
        internal const string net_Websockets_AlreadyOneOutstandingOperation = "net_Websockets_AlreadyOneOutstandingOperation";
        internal const string net_Websockets_WebSocketBaseFaulted = "net_Websockets_WebSocketBaseFaulted";
        internal const string net_WebSockets_NativeSendResponseHeaders = "net_WebSockets_NativeSendResponseHeaders";
        internal const string net_WebSockets_Generic = "net_WebSockets_Generic";
        internal const string net_WebSockets_NotAWebSocket_Generic = "net_WebSockets_NotAWebSocket_Generic";
        internal const string net_WebSockets_UnsupportedWebSocketVersion_Generic = "net_WebSockets_UnsupportedWebSocketVersion_Generic";
        internal const string net_WebSockets_HeaderError_Generic = "net_WebSockets_HeaderError_Generic";
        internal const string net_WebSockets_UnsupportedProtocol_Generic = "net_WebSockets_UnsupportedProtocol_Generic";
        internal const string net_WebSockets_UnsupportedPlatform = "net_WebSockets_UnsupportedPlatform";
        internal const string net_WebSockets_AcceptNotAWebSocket = "net_WebSockets_AcceptNotAWebSocket";
        internal const string net_WebSockets_AcceptUnsupportedWebSocketVersion = "net_WebSockets_AcceptUnsupportedWebSocketVersion";
        internal const string net_WebSockets_AcceptHeaderNotFound = "net_WebSockets_AcceptHeaderNotFound";
        internal const string net_WebSockets_AcceptUnsupportedProtocol = "net_WebSockets_AcceptUnsupportedProtocol";
        internal const string net_WebSockets_ClientAcceptingNoProtocols = "net_WebSockets_ClientAcceptingNoProtocols";
        internal const string net_WebSockets_ClientSecWebSocketProtocolsBlank = "net_WebSockets_ClientSecWebSocketProtocolsBlank";
        internal const string net_WebSockets_ArgumentOutOfRange_TooSmall = "net_WebSockets_ArgumentOutOfRange_TooSmall";
        internal const string net_WebSockets_ArgumentOutOfRange_InternalBuffer = "net_WebSockets_ArgumentOutOfRange_InternalBuffer";
        internal const string net_WebSockets_ArgumentOutOfRange_TooBig = "net_WebSockets_ArgumentOutOfRange_TooBig";
        internal const string net_WebSockets_InvalidState_Generic = "net_WebSockets_InvalidState_Generic";
        internal const string net_WebSockets_InvalidState_ClosedOrAborted = "net_WebSockets_InvalidState_ClosedOrAborted";
        internal const string net_WebSockets_InvalidState = "net_WebSockets_InvalidState";
        internal const string net_WebSockets_ReceiveAsyncDisallowedAfterCloseAsync = "net_WebSockets_ReceiveAsyncDisallowedAfterCloseAsync";
        internal const string net_WebSockets_InvalidMessageType = "net_WebSockets_InvalidMessageType";
        internal const string net_WebSockets_InvalidBufferType = "net_WebSockets_InvalidBufferType";
        internal const string net_WebSockets_InvalidMessageType_Generic = "net_WebSockets_InvalidMessageType_Generic";
        internal const string net_WebSockets_Argument_InvalidMessageType = "net_WebSockets_Argument_InvalidMessageType";
        internal const string net_WebSockets_ConnectionClosedPrematurely_Generic = "net_WebSockets_ConnectionClosedPrematurely_Generic";
        internal const string net_WebSockets_InvalidCharInProtocolString = "net_WebSockets_InvalidCharInProtocolString";
        internal const string net_WebSockets_InvalidEmptySubProtocol = "net_WebSockets_InvalidEmptySubProtocol";
        internal const string net_WebSockets_ReasonNotNull = "net_WebSockets_ReasonNotNull";
        internal const string net_WebSockets_InvalidCloseStatusCode = "net_WebSockets_InvalidCloseStatusCode";
        internal const string net_WebSockets_InvalidCloseStatusDescription = "net_WebSockets_InvalidCloseStatusDescription";
        internal const string net_WebSockets_Scheme = "net_WebSockets_Scheme";
        internal const string net_WebSockets_AlreadyStarted = "net_WebSockets_AlreadyStarted";
        internal const string net_WebSockets_Connect101Expected = "net_WebSockets_Connect101Expected";
        internal const string net_WebSockets_InvalidResponseHeader = "net_WebSockets_InvalidResponseHeader";
        internal const string net_WebSockets_NotConnected = "net_WebSockets_NotConnected";
        internal const string net_WebSockets_InvalidRegistration = "net_WebSockets_InvalidRegistration";
        internal const string net_WebSockets_NoDuplicateProtocol = "net_WebSockets_NoDuplicateProtocol";
        internal const string net_log_exception = "net_log_exception";
        internal const string net_log_listener_delegate_exception = "net_log_listener_delegate_exception";
        internal const string net_log_listener_unsupported_authentication_scheme = "net_log_listener_unsupported_authentication_scheme";
        internal const string net_log_listener_unmatched_authentication_scheme = "net_log_listener_unmatched_authentication_scheme";
        internal const string net_log_listener_create_valid_identity_failed = "net_log_listener_create_valid_identity_failed";
        internal const string net_log_listener_httpsys_registry_null = "net_log_listener_httpsys_registry_null";
        internal const string net_log_listener_httpsys_registry_error = "net_log_listener_httpsys_registry_error";
        internal const string net_log_listener_cant_convert_raw_path = "net_log_listener_cant_convert_raw_path";
        internal const string net_log_listener_cant_convert_percent_value = "net_log_listener_cant_convert_percent_value";
        internal const string net_log_listener_cant_convert_bytes = "net_log_listener_cant_convert_bytes";
        internal const string net_log_listener_cant_convert_to_utf8 = "net_log_listener_cant_convert_to_utf8";
        internal const string net_log_listener_cant_create_uri = "net_log_listener_cant_create_uri";
        internal const string net_log_listener_no_cbt_disabled = "net_log_listener_no_cbt_disabled";
        internal const string net_log_listener_no_cbt_http = "net_log_listener_no_cbt_http";
        internal const string net_log_listener_no_cbt_platform = "net_log_listener_no_cbt_platform";
        internal const string net_log_listener_no_cbt_trustedproxy = "net_log_listener_no_cbt_trustedproxy";
        internal const string net_log_listener_cbt = "net_log_listener_cbt";
        internal const string net_log_listener_no_spn_kerberos = "net_log_listener_no_spn_kerberos";
        internal const string net_log_listener_no_spn_disabled = "net_log_listener_no_spn_disabled";
        internal const string net_log_listener_no_spn_cbt = "net_log_listener_no_spn_cbt";
        internal const string net_log_listener_no_spn_platform = "net_log_listener_no_spn_platform";
        internal const string net_log_listener_no_spn_whensupported = "net_log_listener_no_spn_whensupported";
        internal const string net_log_listener_no_spn_loopback = "net_log_listener_no_spn_loopback";
        internal const string net_log_listener_spn = "net_log_listener_spn";
        internal const string net_log_listener_spn_passed = "net_log_listener_spn_passed";
        internal const string net_log_listener_spn_failed = "net_log_listener_spn_failed";
        internal const string net_log_listener_spn_failed_always = "net_log_listener_spn_failed_always";
        internal const string net_log_listener_spn_failed_empty = "net_log_listener_spn_failed_empty";
        internal const string net_log_listener_spn_failed_dump = "net_log_listener_spn_failed_dump";
        internal const string net_log_listener_spn_add = "net_log_listener_spn_add";
        internal const string net_log_listener_spn_not_add = "net_log_listener_spn_not_add";
        internal const string net_log_listener_spn_remove = "net_log_listener_spn_remove";
        internal const string net_log_listener_spn_not_remove = "net_log_listener_spn_not_remove";
        internal const string net_log_sspi_enumerating_security_packages = "net_log_sspi_enumerating_security_packages";
        internal const string net_log_sspi_security_package_not_found = "net_log_sspi_security_package_not_found";
        internal const string net_log_sspi_security_context_input_buffer = "net_log_sspi_security_context_input_buffer";
        internal const string net_log_sspi_security_context_input_buffers = "net_log_sspi_security_context_input_buffers";
        internal const string net_log_sspi_selected_cipher_suite = "net_log_sspi_selected_cipher_suite";
        internal const string net_log_remote_certificate = "net_log_remote_certificate";
        internal const string net_log_locating_private_key_for_certificate = "net_log_locating_private_key_for_certificate";
        internal const string net_log_cert_is_of_type_2 = "net_log_cert_is_of_type_2";
        internal const string net_log_found_cert_in_store = "net_log_found_cert_in_store";
        internal const string net_log_did_not_find_cert_in_store = "net_log_did_not_find_cert_in_store";
        internal const string net_log_open_store_failed = "net_log_open_store_failed";
        internal const string net_log_got_certificate_from_delegate = "net_log_got_certificate_from_delegate";
        internal const string net_log_no_delegate_and_have_no_client_cert = "net_log_no_delegate_and_have_no_client_cert";
        internal const string net_log_no_delegate_but_have_client_cert = "net_log_no_delegate_but_have_client_cert";
        internal const string net_log_attempting_restart_using_cert = "net_log_attempting_restart_using_cert";
        internal const string net_log_no_issuers_try_all_certs = "net_log_no_issuers_try_all_certs";
        internal const string net_log_server_issuers_look_for_matching_certs = "net_log_server_issuers_look_for_matching_certs";
        internal const string net_log_selected_cert = "net_log_selected_cert";
        internal const string net_log_n_certs_after_filtering = "net_log_n_certs_after_filtering";
        internal const string net_log_finding_matching_certs = "net_log_finding_matching_certs";
        internal const string net_log_using_cached_credential = "net_log_using_cached_credential";
        internal const string net_log_remote_cert_user_declared_valid = "net_log_remote_cert_user_declared_valid";
        internal const string net_log_remote_cert_user_declared_invalid = "net_log_remote_cert_user_declared_invalid";
        internal const string net_log_remote_cert_has_no_errors = "net_log_remote_cert_has_no_errors";
        internal const string net_log_remote_cert_has_errors = "net_log_remote_cert_has_errors";
        internal const string net_log_remote_cert_not_available = "net_log_remote_cert_not_available";
        internal const string net_log_remote_cert_name_mismatch = "net_log_remote_cert_name_mismatch";
        internal const string net_log_proxy_autodetect_script_location_parse_error = "net_log_proxy_autodetect_script_location_parse_error";
        internal const string net_log_proxy_autodetect_failed = "net_log_proxy_autodetect_failed";
        internal const string net_log_proxy_script_execution_error = "net_log_proxy_script_execution_error";
        internal const string net_log_proxy_script_download_compile_error = "net_log_proxy_script_download_compile_error";
        internal const string net_log_proxy_system_setting_update = "net_log_proxy_system_setting_update";
        internal const string net_log_proxy_update_due_to_ip_config_change = "net_log_proxy_update_due_to_ip_config_change";
        internal const string net_log_proxy_called_with_null_parameter = "net_log_proxy_called_with_null_parameter";
        internal const string net_log_proxy_called_with_invalid_parameter = "net_log_proxy_called_with_invalid_parameter";
        internal const string net_log_proxy_ras_supported = "net_log_proxy_ras_supported";
        internal const string net_log_proxy_ras_notsupported_exception = "net_log_proxy_ras_notsupported_exception";
        internal const string net_log_proxy_winhttp_cant_open_session = "net_log_proxy_winhttp_cant_open_session";
        internal const string net_log_proxy_winhttp_getproxy_failed = "net_log_proxy_winhttp_getproxy_failed";
        internal const string net_log_proxy_winhttp_timeout_error = "net_log_proxy_winhttp_timeout_error";
        internal const string net_log_digest_hash_algorithm_not_supported = "net_log_digest_hash_algorithm_not_supported";
        internal const string net_log_digest_qop_not_supported = "net_log_digest_qop_not_supported";
        internal const string net_log_digest_requires_nonce = "net_log_digest_requires_nonce";
        internal const string net_log_auth_invalid_challenge = "net_log_auth_invalid_challenge";
        internal const string net_log_unknown = "net_log_unknown";
        internal const string net_log_operation_returned_something = "net_log_operation_returned_something";
        internal const string net_log_operation_failed_with_error = "net_log_operation_failed_with_error";
        internal const string net_log_buffered_n_bytes = "net_log_buffered_n_bytes";
        internal const string net_log_method_equal = "net_log_method_equal";
        internal const string net_log_releasing_connection = "net_log_releasing_connection";
        internal const string net_log_unexpected_exception = "net_log_unexpected_exception";
        internal const string net_log_server_response_error_code = "net_log_server_response_error_code";
        internal const string net_log_resubmitting_request = "net_log_resubmitting_request";
        internal const string net_log_retrieving_localhost_exception = "net_log_retrieving_localhost_exception";
        internal const string net_log_resolved_servicepoint_may_not_be_remote_server = "net_log_resolved_servicepoint_may_not_be_remote_server";
        internal const string net_log_closed_idle = "net_log_closed_idle";
        internal const string net_log_received_status_line = "net_log_received_status_line";
        internal const string net_log_sending_headers = "net_log_sending_headers";
        internal const string net_log_received_headers = "net_log_received_headers";
        internal const string net_log_shell_expression_pattern_format_warning = "net_log_shell_expression_pattern_format_warning";
        internal const string net_log_exception_in_callback = "net_log_exception_in_callback";
        internal const string net_log_sending_command = "net_log_sending_command";
        internal const string net_log_received_response = "net_log_received_response";
        internal const string net_log_socket_connected = "net_log_socket_connected";
        internal const string net_log_socket_accepted = "net_log_socket_accepted";
        internal const string net_log_socket_not_logged_file = "net_log_socket_not_logged_file";
        internal const string net_log_socket_connect_dnsendpoint = "net_log_socket_connect_dnsendpoint";
        internal const string SSPIInvalidHandleType = "SSPIInvalidHandleType";
        
        private static SR loader = null;
        private ResourceManager resources;

        internal SR()
        {
            resources = new System.Resources.ResourceManager("System", this.GetType().Assembly);
        }

        private static SR GetLoader()
        {
            if (loader == null)
            {
                SR sr = new SR();
                Interlocked.CompareExchange(ref loader, sr, null);
            }
            return loader;
        }

        private static CultureInfo Culture
        {
            get { return null/*use ResourceManager default, CultureInfo.CurrentUICulture*/; }
        }

        public static ResourceManager Resources
        {
            get
            {
                return GetLoader().resources;
            }
        }

        public static string GetString(string name, params object[] args)
        {
            SR sys = GetLoader();
            if (sys == null)
            {
                return null;
            }
            string res = sys.resources.GetString(name, SR.Culture);

            if (args != null && args.Length > 0)
            {
                for (int i = 0; i < args.Length; i++)
                {
                    String value = args[i] as String;
                    if (value != null && value.Length > 1024)
                    {
                        args[i] = value.Substring(0, 1024 - 3) + "...";
                    }
                }
                return String.Format(CultureInfo.CurrentCulture, res, args);
            }
            else
            {
                return res;
            }
        }

        public static string GetString(string name)
        {
            SR sys = GetLoader();
            if (sys == null)
            {
                return null;
            }
            return sys.resources.GetString(name, SR.Culture);
        }

        public static string GetString(string name, out bool usedFallback)
        {
            // always false for this version of gensr
            usedFallback = false;
            return GetString(name);
        }

        public static object GetObject(string name)
        {
            SR sys = GetLoader();
            if (sys == null)
            {
                return null;
            }
            return sys.resources.GetObject(name, SR.Culture);
        }
    }
}
