@model IEnumerable<MusicStore.Models.Album>

    @helper Truncate(string input, int length)
{
    if (input.Length <= length)
    {
        @input
    }
    else
    {
        @input.Substring(0, length)<text>...</text>
    }
}

    @{
        //Bug: Need to have a way to specify an application level layout page
        Layout = "/Views/Shared/_Layout.cshtml";
        ViewBag.Title = "Index";
    }

    <h2>Index</h2>

    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Genre.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Artist.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Price)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.ValueFor(modelItem => item.Genre.Name)
                </td>
                <td>
                    @Truncate(item.Artist.Name, 25)
                </td>
                <td>
                    @Truncate(item.Title, 25)
                </td>
                <td>
                    @Html.ValueFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.AlbumId }) |
                    @Html.ActionLink("Details", "Details", new { id = item.AlbumId }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.AlbumId })
                </td>
            </tr>
        }

    </table>