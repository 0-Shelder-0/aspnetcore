// <auto-generated />
namespace Microsoft.AspNet.Security.DataProtection
{
    using System.Globalization;
    using System.Reflection;
    using System.Resources;

    internal static class Resources
    {
        private static readonly ResourceManager _resourceManager
            = new ResourceManager("Microsoft.AspNet.Security.DataProtection.Resources", typeof(Resources).GetTypeInfo().Assembly);

        /// <summary>
        /// A provider could not be found for algorithm '{0}'.
        /// </summary>
        internal static string BCryptAlgorithmHandle_ProviderNotFound
        {
            get { return GetString("BCryptAlgorithmHandle_ProviderNotFound"); }
        }

        /// <summary>
        /// A provider could not be found for algorithm '{0}'.
        /// </summary>
        internal static string FormatBCryptAlgorithmHandle_ProviderNotFound(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("BCryptAlgorithmHandle_ProviderNotFound"), p0);
        }

        /// <summary>
        /// The key length {0} is invalid. Valid key lengths are {1} to {2} bits (step size {3}).
        /// </summary>
        internal static string BCRYPT_KEY_LENGTHS_STRUCT_InvalidKeyLength
        {
            get { return GetString("BCRYPT_KEY_LENGTHS_STRUCT_InvalidKeyLength"); }
        }

        /// <summary>
        /// The key length {0} is invalid. Valid key lengths are {1} to {2} bits (step size {3}).
        /// </summary>
        internal static string FormatBCRYPT_KEY_LENGTHS_STRUCT_InvalidKeyLength(object p0, object p1, object p2, object p3)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("BCRYPT_KEY_LENGTHS_STRUCT_InvalidKeyLength"), p0, p1, p2, p3);
        }

        /// <summary>
        /// An error occurred during a cryptographic operation.
        /// </summary>
        internal static string CryptCommon_GenericError
        {
            get { return GetString("CryptCommon_GenericError"); }
        }

        /// <summary>
        /// An error occurred during a cryptographic operation.
        /// </summary>
        internal static string FormatCryptCommon_GenericError()
        {
            return GetString("CryptCommon_GenericError");
        }

        /// <summary>
        /// The provided buffer is of length {0} byte(s). It must instead be exactly {1} byte(s) in length.
        /// </summary>
        internal static string Common_BufferIncorrectlySized
        {
            get { return GetString("Common_BufferIncorrectlySized"); }
        }

        /// <summary>
        /// The provided buffer is of length {0} byte(s). It must instead be exactly {1} byte(s) in length.
        /// </summary>
        internal static string FormatCommon_BufferIncorrectlySized(object p0, object p1)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Common_BufferIncorrectlySized"), p0, p1);
        }

        /// <summary>
        /// The payload was invalid.
        /// </summary>
        internal static string CryptCommon_PayloadInvalid
        {
            get { return GetString("CryptCommon_PayloadInvalid"); }
        }

        /// <summary>
        /// The payload was invalid.
        /// </summary>
        internal static string FormatCryptCommon_PayloadInvalid()
        {
            return GetString("CryptCommon_PayloadInvalid");
        }

        /// <summary>
        /// Property {0} cannot be null or empty.
        /// </summary>
        internal static string Common_PropertyCannotBeNullOrEmpty
        {
            get { return GetString("Common_PropertyCannotBeNullOrEmpty"); }
        }

        /// <summary>
        /// Property {0} cannot be null or empty.
        /// </summary>
        internal static string FormatCommon_PropertyCannotBeNullOrEmpty(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Common_PropertyCannotBeNullOrEmpty"), p0);
        }

        /// <summary>
        /// The provided payload could not be decrypted. Refer to the inner exception for more information.
        /// </summary>
        internal static string Common_DecryptionFailed
        {
            get { return GetString("Common_DecryptionFailed"); }
        }

        /// <summary>
        /// The provided payload could not be decrypted. Refer to the inner exception for more information.
        /// </summary>
        internal static string FormatCommon_DecryptionFailed()
        {
            return GetString("Common_DecryptionFailed");
        }

        /// <summary>
        /// An error occurred while trying to encrypt the provided data. Refer to the inner exception for more information.
        /// </summary>
        internal static string Common_EncryptionFailed
        {
            get { return GetString("Common_EncryptionFailed"); }
        }

        /// <summary>
        /// An error occurred while trying to encrypt the provided data. Refer to the inner exception for more information.
        /// </summary>
        internal static string FormatCommon_EncryptionFailed()
        {
            return GetString("Common_EncryptionFailed");
        }

        /// <summary>
        /// The key {0:B} was not found in the keyring.
        /// </summary>
        internal static string Common_KeyNotFound
        {
            get { return GetString("Common_KeyNotFound"); }
        }

        /// <summary>
        /// The key {0:B} was not found in the keyring.
        /// </summary>
        internal static string FormatCommon_KeyNotFound()
        {
            return GetString("Common_KeyNotFound");
        }

        /// <summary>
        /// The key {0:B} has been revoked.
        /// </summary>
        internal static string Common_KeyRevoked
        {
            get { return GetString("Common_KeyRevoked"); }
        }

        /// <summary>
        /// The key {0:B} has been revoked.
        /// </summary>
        internal static string FormatCommon_KeyRevoked()
        {
            return GetString("Common_KeyRevoked");
        }

        /// <summary>
        /// The provided payload was not protected with this protection provider.
        /// </summary>
        internal static string Common_NotAValidProtectedPayload
        {
            get { return GetString("Common_NotAValidProtectedPayload"); }
        }

        /// <summary>
        /// The provided payload was not protected with this protection provider.
        /// </summary>
        internal static string FormatCommon_NotAValidProtectedPayload()
        {
            return GetString("Common_NotAValidProtectedPayload");
        }

        /// <summary>
        /// The protected payload cannot be decrypted because it was protected with a newer version of the protection provider.
        /// </summary>
        internal static string Common_PayloadProducedByNewerVersion
        {
            get { return GetString("Common_PayloadProducedByNewerVersion"); }
        }

        /// <summary>
        /// The protected payload cannot be decrypted because it was protected with a newer version of the protection provider.
        /// </summary>
        internal static string FormatCommon_PayloadProducedByNewerVersion()
        {
            return GetString("Common_PayloadProducedByNewerVersion");
        }

        private static string GetString(string name, params string[] formatterNames)
        {
            var value = _resourceManager.GetString(name);

            System.Diagnostics.Debug.Assert(value != null);

            if (formatterNames != null)
            {
                for (var i = 0; i < formatterNames.Length; i++)
                {
                    value = value.Replace("{" + formatterNames[i] + "}", "{" + i + "}");
                }
            }

            return value;
        }
    }
}
