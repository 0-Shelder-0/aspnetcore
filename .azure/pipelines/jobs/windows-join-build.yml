# This runs code signing for .nupkg files built on MacOS or Linux
parameters:
  inputName: ''

jobs:
- template: default-build.yml
  parameters:
    codeSign: true
    dependsOn:
      - Windows_x64_build
      - Windows_x86_build
    condition: and(in(variables['_SignType'], 'test', 'real'), in(dependencies.${{ parameters.inputName }}_build.result, 'Succeeded', 'SucceededWithIssues'))
    jobName: Windows_Join_Build
    jobDisplayName: "Build combined Windows SiteExtensions & Hosting Bundle"
    agentOs: Windows
    steps:
    - script: "echo ##vso[build.addbuildtag]daily-build"
      condition: and(notin(variables['Build.Reason'], 'PullRequest'), notin(variables['DotNetFinalVersionKind'], 'release', 'prerelease'))
      displayName: 'Set CI tags'
    - script: "echo ##vso[build.addbuildtag]release-candidate"
      condition: and(notin(variables['Build.Reason'], 'PullRequest'), in(variables['DotNetFinalVersionKind'], 'release', 'prerelease'))
      displayName: 'Set CI tags'
    - script: .\src\SiteExtensions\build.cmd
              -ci
              -nobl
              -noBuildRepoTasks
              -pack
              -noBuildDeps
              -noBuildNative
              $(_BuildArgs)
              $(_InternalRuntimeDownloadArgs)
      condition: ne(variables['Build.Reason'], 'PullRequest')
      displayName: Build SiteExtension
      
    # This runs code-signing on all packages, zips, and jar files as defined in build/CodeSign.targets. If
    # https://github.com/dotnet/arcade/issues/1957 is resolved, consider running code-signing inline with the other
    # previous steps. Sign check is disabled because it is run in a separate step below, after installers are built.
    - script: ./build.cmd
              -ci
              -nobl
              -noBuildRepoTasks
              -noBuild
              -noRestore
              -sign
              /p:DotNetSignType=$(_SignType)
              $(_BuildArgs)
      displayName: Code sign packages

    - script: ./build.cmd
              -ci
              -noBuildRepoTasks
              -sign
              -buildBundles
              -noBuildNative
              /bl:artifacts/log/installers.msbuild.binlog
              /p:DotNetSignType=$(_SignType)
              /p:AssetManifestFileName=aspnetcore-win-bundle.xml
              $(_BuildArgs)
              $(_InternalRuntimeDownloadArgs)
      displayName: Build Hosting Bundle
    artifacts:
    - name: Windows_Join_Logs
      path: artifacts/log/
      publishOnError: true
      includeForks: true
